/* eslint-disable */
// @generated by protoc-gen-es v0.0.1 with parameter "ts_nocheck=false"
// @generated from file google/protobuf/unittest_lite_imports_nonlite.proto (package protobuf_unittest, syntax proto2)

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto2} from "@bufbuild/protobuf";
import {TestAllTypes, TestRequired} from "./unittest_pb.js";

/**
 * @generated from message protobuf_unittest.TestLiteImportsNonlite
 */
export class TestLiteImportsNonlite extends Message<TestLiteImportsNonlite> {

    /**
     * @generated from field: optional protobuf_unittest.TestAllTypes message = 1;
     */
    message?: TestAllTypes;

    /**
     * @generated from field: optional protobuf_unittest.TestRequired message_with_required = 2;
     */
    messageWithRequired?: TestRequired;

    constructor(data?: PartialMessage<TestLiteImportsNonlite>) {
        super();
        proto2.util.initPartial(data, this);
    }

    static readonly runtime = proto2;
    static readonly typeName = "protobuf_unittest.TestLiteImportsNonlite";
    static readonly fields: FieldList = proto2.util.newFieldList(() => [
        {no: 1, name: "message", kind: "message", T: TestAllTypes, opt: true},
        {no: 2, name: "message_with_required", kind: "message", T: TestRequired, opt: true},
    ]);

    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestLiteImportsNonlite {
        return new TestLiteImportsNonlite().fromBinary(bytes, options);
    }

    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestLiteImportsNonlite {
        return new TestLiteImportsNonlite().fromJson(jsonValue, options);
    }

    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestLiteImportsNonlite {
        return new TestLiteImportsNonlite().fromJsonString(jsonString, options);
    }

    static equals(a: TestLiteImportsNonlite | PlainMessage<TestLiteImportsNonlite> | undefined, b: TestLiteImportsNonlite | PlainMessage<TestLiteImportsNonlite> | undefined): boolean {
        return proto2.util.equals(TestLiteImportsNonlite, a, b);
    }

}


